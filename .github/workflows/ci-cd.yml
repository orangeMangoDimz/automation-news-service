name: Python CI/CD

on:
  push:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.12.3'
  APP_DIR: ${{ vars.APP_DIR }}
  VENV_NAME: ${{ vars.VENV_NAME }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install rsync (for file transfer)
      run: sudo apt-get update && sudo apt-get install -y rsync
    
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
         # Clone or update the repository
          if [ ! -d "${{ env.APP_DIR }}" ]; then
            git clone https://github.com/${{ github.repository }}.git ${{ env.APP_DIR }}
          else
            cd ${{ env.APP_DIR }}
            git pull origin main
          fi
          
          # Navigate to app directory
          cd ${{ env.APP_DIR }}
          
          # Create virtualenv if not exists
          if [ ! -d "${{ env.VENV_NAME }}" ]; then
            python -m venv ${{ env.VENV_NAME }}
          fi
          
          # Activate virtualenv
          source ${{ env.VENV_NAME }}/bin/activate
          
          # Install dependencies
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Restart service
          sudo systemctl restart ${{ env.SERVICE_NAME }}
